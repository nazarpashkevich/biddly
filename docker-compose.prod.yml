version: '3.9'

services:
  postgres_db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_HOST=${DATABASE_HOST}
      - POSTGRES_PORT=${DATABASE_PORT}
    ports:
      - '${DATABASE_PORT}:5432'
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [ 'CMD-SHELL', 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}' ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  server:
    build:
      context: .
      dockerfile: ./docker/prod/Dockerfile
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      - API_PORT=${API_PORT}
      - API_HOST=${API_HOST}
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME_SECONDS=${JWT_ACCESS_TOKEN_EXPIRATION_TIME_SECONDS}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_URL=postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@postgres_db:${DATABASE_PORT}/${DATABASE_NAME}?schema=public
    ports:
      - ${API_PORT}:${API_PORT}
volumes:
  dbdata:
