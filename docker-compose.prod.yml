version: '3.9'

services:
  db:
    image: postgres:17
    restart: always
    ports:
      - '${DATABASE_PORT:-5432}:5432'
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [ 'CMD-SHELL', 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}' ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: ./docker/prod/Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      - API_PORT=${API_PORT}
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}?schema=public
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - NODE_ENV=development
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
      - ./docker/redis/entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ./docker/redis/redis.conf.template:/usr/local/etc/redis/redis.conf.template
    environment:
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DATABASES: ${REDIS_DATABASES:-16}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    entrypoint: [ "sh", "/usr/local/bin/entrypoint.sh" ]
volumes:
  postgres_data:
